<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.7 on win32)" generated="2025-08-29T15:49:15.258282" rpa="false" schemaversion="5">
<suite id="s1" name="Login" source="C:\Users\gouth\PycharmProjects\WebTesting_robotFramework\Tests\login.robot">
<kw name="Set Screenshot Directory" owner="SeleniumLibrary" type="SETUP">
<arg>../Screenshots/</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" start="2025-08-29T15:49:15.823570" elapsed="0.000582"/>
</kw>
<test id="s1-t1" name="Verify successful login with the given details" line="16">
<kw name="Open The Browser" owner="resource" type="SETUP">
<if>
<branch type="IF" condition="&quot;${BROWSER_NAME}&quot; == &quot;chrome&quot;">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-08-29T15:49:15.826703" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000021D40879BE0&gt;</msg>
<var>${options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys,selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-08-29T15:49:15.826293" elapsed="0.000473"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--start-maximized</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2025-08-29T15:49:15.826962" elapsed="0.000187"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--incognito</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2025-08-29T15:49:15.827306" elapsed="0.000180"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:15.828028" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg time="2025-08-29T15:49:15.830461" level="DEBUG">Selenium Manager binary found at: C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\selenium\webdriver\common\windows\selenium-manager.exe</msg>
<msg time="2025-08-29T15:49:15.830650" level="DEBUG">Executing process: C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\selenium\webdriver\common\windows\selenium-manager.exe --browser chrome --debug --language-binding python --output json</msg>
<msg time="2025-08-29T15:49:15.967511" level="DEBUG">chromedriver not found in PATH</msg>
<msg time="2025-08-29T15:49:15.967668" level="DEBUG">chrome detected at C:\Program Files\Google\Chrome\Application\chrome.exe</msg>
<msg time="2025-08-29T15:49:15.967744" level="DEBUG">Detected browser: chrome 139.0.7258.139</msg>
<msg time="2025-08-29T15:49:15.967809" level="DEBUG">Required driver: chromedriver 139.0.7258.154</msg>
<msg time="2025-08-29T15:49:15.967874" level="DEBUG">chromedriver 139.0.7258.154 already in the cache</msg>
<msg time="2025-08-29T15:49:15.967942" level="DEBUG">Driver path: C:\Users\gouth\.cache\selenium\chromedriver\win64\139.0.7258.154\chromedriver.exe</msg>
<msg time="2025-08-29T15:49:15.968017" level="DEBUG">Browser path: C:\Program Files\Google\Chrome\Application\chrome.exe</msg>
<msg time="2025-08-29T15:49:15.976574" level="DEBUG">Started executable: `C:\Users\gouth\.cache\selenium\chromedriver\win64\139.0.7258.154\chromedriver.exe` in a child process with pid: 13460 using 0 to output -3</msg>
<msg time="2025-08-29T15:49:16.491067" level="DEBUG">POST http://localhost:63317/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': &lt;PageLoadStrategy.normal: 'normal'&gt;, 'browserVersion': None, 'goog:chromeOptions': {'extensions': [], 'binary': 'C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe', 'args': ['--start-maximized', '--incognito']}}}}</msg>
<msg time="2025-08-29T15:49:16.492014" level="DEBUG">Starting new HTTP connection (1): localhost:63317</msg>
<msg time="2025-08-29T15:49:17.229306" level="DEBUG">http://localhost:63317 "POST /session HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:17.229486" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"139.0.7258.139","chrome":{"chromedriverVersion":"139.0.7258.154 (9e0d6b2b47ffb17007b713429c9a302f9e43847f-refs/branch-heads/7258@{#2926})","userDataDir":"C:\\Users\\gouth\\AppData\\Local\\Temp\\scoped_dir13460_1260392849"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:53805"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"e1eb504bdb8ecd4059449adaa7be80ab"}} | headers=HTTPHeaderDict({'Content-Length': '884', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:17.229597" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:17.229698" level="DEBUG">Created Chrome WebDriver instance with session id e1eb504bdb8ecd4059449adaa7be80ab.</msg>
<arg>Chrome</arg>
<arg>options=${options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2025-08-29T15:49:15.827705" elapsed="1.402084"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-08-29T15:49:20.230614" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-08-29T15:49:17.230030" elapsed="3.000844"/>
</kw>
<status status="PASS" start="2025-08-29T15:49:15.825951" elapsed="4.405070"/>
</branch>
<branch type="ELSE IF" condition="&quot;${BROWSER_NAME}&quot; == &quot;edge&quot;">
<kw name="Evaluate" owner="BuiltIn">
<var>${options}</var>
<arg>sys.modules['selenium.webdriver'].EdgeOptions()</arg>
<arg>sys,selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.231418" elapsed="0.000047"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--start-maximized</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.231621" elapsed="0.000037"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--incognito</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.231786" elapsed="0.000036"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<arg>Edge</arg>
<arg>options=${options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.232009" elapsed="0.000053"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.232230" elapsed="0.000054"/>
</kw>
<status status="NOT RUN" start="2025-08-29T15:49:20.231140" elapsed="0.001217"/>
</branch>
<branch type="ELSE IF" condition="&quot;${BROWSER_NAME}&quot; == &quot;firefox&quot;">
<kw name="Evaluate" owner="BuiltIn">
<var>${options}</var>
<arg>sys.modules['selenium.webdriver'].FirefoxOptions()</arg>
<arg>sys,selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.232622" elapsed="0.000044"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--start-maximized</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.232842" elapsed="0.000036"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${options}</arg>
<arg>add_argument</arg>
<arg>--incognito</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.233510" elapsed="0.000074"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<arg>Firefox</arg>
<arg>options=${options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.233801" elapsed="0.000052"/>
</kw>
<status status="NOT RUN" start="2025-08-29T15:49:20.232442" elapsed="0.001496"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" owner="BuiltIn">
<arg>fail</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:20.234228" elapsed="0.000060"/>
</kw>
<status status="NOT RUN" start="2025-08-29T15:49:20.234026" elapsed="0.000339"/>
</branch>
<status status="PASS" start="2025-08-29T15:49:15.825913" elapsed="4.408523"/>
</if>
<arg>${BROWSER_NAME}</arg>
<status status="PASS" start="2025-08-29T15:49:15.825494" elapsed="4.409114"/>
</kw>
<kw name="Fill the login details" owner="loginPage">
<kw name="Go To" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:20.236981" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<msg time="2025-08-29T15:49:20.237279" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/url {'url': 'https://www.saucedemo.com/'}</msg>
<msg time="2025-08-29T15:49:21.628192" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/url HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.628585" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.628716" level="DEBUG">Finished Request</msg>
<arg>https://www.saucedemo.com/</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="PASS" start="2025-08-29T15:49:20.236763" elapsed="1.392098"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:21.631028" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '#user-name'}</msg>
<msg time="2025-08-29T15:49:21.648255" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.648469" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3"}]} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.648576" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:21.649899" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3'}]}</msg>
<msg time="2025-08-29T15:49:21.666361" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/execute/sync HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.666580" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.666717" level="DEBUG">Finished Request</msg>
<arg>css:#user-name</arg>
<arg>10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2025-08-29T15:49:21.629248" elapsed="0.037598"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:21.667595" level="INFO">Typing text 'standard_user' into text field 'css:#user-name'.</msg>
<msg time="2025-08-29T15:49:21.667831" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '#user-name'}</msg>
<msg time="2025-08-29T15:49:21.681811" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.682079" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3"}]} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.682190" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:21.682365" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3/clear {}</msg>
<msg time="2025-08-29T15:49:21.746525" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3/clear HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.746747" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.746850" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:21.747048" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3/value {'text': 'standard_user', 'value': ['s', 't', 'a', 'n', 'd', 'a', 'r', 'd', '_', 'u', 's', 'e', 'r']}</msg>
<msg time="2025-08-29T15:49:21.880060" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.3/value HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.880315" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.880429" level="DEBUG">Finished Request</msg>
<arg>css:#user-name</arg>
<arg>${userName}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:21.667191" elapsed="0.213357"/>
</kw>
<kw name="Input Password" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:21.881171" level="INFO">Typing password into text field 'id:password'.</msg>
<msg time="2025-08-29T15:49:21.881459" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="password"]'}</msg>
<msg time="2025-08-29T15:49:21.897082" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.897259" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.4"}]} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.897358" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:21.897520" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.4/clear {}</msg>
<msg time="2025-08-29T15:49:21.929551" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.4/clear HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:21.929975" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:21.930083" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:21.930148" level="INFO">Temporally setting log level to: NONE</msg>
<msg time="2025-08-29T15:49:22.003161" level="DEBUG">Log level changed from NONE to DEBUG.</msg>
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:21.880817" elapsed="0.122459"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:22.003763" level="INFO">Clicking button 'id:login-button'.</msg>
<msg time="2025-08-29T15:49:22.003938" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="login-button"]'}</msg>
<msg time="2025-08-29T15:49:22.018734" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:22.018940" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.5"}]} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:22.019039" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:22.019184" level="DEBUG">GET http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.5/name {}</msg>
<msg time="2025-08-29T15:49:22.027514" level="DEBUG">http://localhost:63317 "GET /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.5/name HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:22.027694" level="DEBUG">Remote response: status=200 | data={"value":"input"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:22.027819" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:22.027961" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.5/click {}</msg>
<msg time="2025-08-29T15:49:22.171184" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.5/click HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:22.171457" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:22.171617" level="DEBUG">Finished Request</msg>
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:22.003518" elapsed="0.168262"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-08-29T15:49:25.173524" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-08-29T15:49:22.172155" elapsed="3.001748"/>
</kw>
<status status="PASS" start="2025-08-29T15:49:20.235475" elapsed="4.938766"/>
</kw>
<kw name="Verify you are in the shop page" owner="shopPage">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Element Should Be Visible" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.176618" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="shopping_cart_container"]'}</msg>
<msg time="2025-08-29T15:49:25.192566" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.192818" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.20"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.192938" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.193238" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.20'}]}</msg>
<msg time="2025-08-29T15:49:25.203191" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/execute/sync HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.203410" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.203511" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.203598" level="INFO">Element 'id:shopping_cart_container' is displayed.</msg>
<arg>id:shopping_cart_container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="PASS" start="2025-08-29T15:49:25.176020" elapsed="0.027666"/>
</kw>
<msg time="2025-08-29T15:49:25.203814" level="INFO">Returning from the enclosing user keyword.</msg>
<var>${is_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>id:shopping_cart_container</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2025-08-29T15:49:25.175748" elapsed="0.028195"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_visible}</arg>
<arg>Log To Console</arg>
<arg>You are in the shop page</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:25.204353" elapsed="0.000120"/>
</kw>
<if>
<branch type="IF" condition="${is_visible}">
<kw name="Add items to the cart" owner="shopPage">
<status status="NOT RUN" start="2025-08-29T15:49:25.205334" elapsed="0.000071"/>
</kw>
<status status="NOT RUN" start="2025-08-29T15:49:25.204749" elapsed="0.000722"/>
</branch>
<status status="NOT RUN" start="2025-08-29T15:49:25.204686" elapsed="0.000860"/>
</if>
<status status="PASS" start="2025-08-29T15:49:25.175123" elapsed="0.030537"/>
</kw>
<kw name="Add items to the cart" owner="shopPage">
<kw name="Get WebElements" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.208296" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '.inventory_item_name'}</msg>
<msg time="2025-08-29T15:49:25.223129" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.223395" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.21"},{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.22"},{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.23"},{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.24"},{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.25"},{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.26"}]} | headers=HTTPHeaderDict({'Content-Length': '713', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.223684" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.224076" level="INFO">@{list_of_items} = [ &lt;selenium.webdriver.remote.webelement.WebElement (session="e1eb504bdb8ecd4059449adaa7be80ab", element="f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.21")&gt; | &lt;selenium.webdr...</msg>
<var>@{list_of_items}</var>
<arg>css:.inventory_item_name</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:25.207625" elapsed="0.016516"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-08-29T15:49:25.224767" level="INFO">Length is 6.</msg>
<msg time="2025-08-29T15:49:25.224895" level="INFO">${len} = 6</msg>
<var>${len}</var>
<arg>${list_of_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-08-29T15:49:25.224495" elapsed="0.000458"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.226499" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'xpath', 'value': "//div[@class='inventory_item'][1]/div/div/a/div"}</msg>
<msg time="2025-08-29T15:49:25.242184" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.242398" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.21"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.242499" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.242654" level="DEBUG">GET http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.21/text {}</msg>
<msg time="2025-08-29T15:49:25.260554" level="DEBUG">http://localhost:63317 "GET /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.21/text HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.260791" level="DEBUG">Remote response: status=200 | data={"value":"Sauce Labs Backpack"} | headers=HTTPHeaderDict({'Content-Length': '31', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.260892" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.261086" level="INFO">${text} = Sauce Labs Backpack</msg>
<var>${text}</var>
<arg>xpath://div[@class='inventory_item'][${index}]/div/div/a/div</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:25.225826" elapsed="0.035302"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == '${itemName}'">
<kw name="Click Element" owner="SeleniumLibrary">
<arg>xpath://div[@class='inventory_item'][${index}]/div/div[2]/button</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:25.261741" elapsed="0.000043"/>
</kw>
<break>
<status status="NOT RUN" start="2025-08-29T15:49:25.261884" elapsed="0.000063"/>
</break>
<status status="NOT RUN" start="2025-08-29T15:49:25.261331" elapsed="0.000672"/>
</branch>
<status status="PASS" start="2025-08-29T15:49:25.261291" elapsed="0.000759"/>
</if>
<var name="${index}">1</var>
<status status="PASS" start="2025-08-29T15:49:25.225626" elapsed="0.036459"/>
</iter>
<iter>
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.263064" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'xpath', 'value': "//div[@class='inventory_item'][2]/div/div/a/div"}</msg>
<msg time="2025-08-29T15:49:25.278121" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.278341" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.22"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.278442" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.278594" level="DEBUG">GET http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.22/text {}</msg>
<msg time="2025-08-29T15:49:25.289548" level="DEBUG">http://localhost:63317 "GET /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.22/text HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.289961" level="DEBUG">Remote response: status=200 | data={"value":"Sauce Labs Bike Light"} | headers=HTTPHeaderDict({'Content-Length': '33', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.290091" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.290299" level="INFO">${text} = Sauce Labs Bike Light</msg>
<var>${text}</var>
<arg>xpath://div[@class='inventory_item'][${index}]/div/div/a/div</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:25.262492" elapsed="0.027891"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == '${itemName}'">
<kw name="Click Element" owner="SeleniumLibrary">
<arg>xpath://div[@class='inventory_item'][${index}]/div/div[2]/button</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:25.291049" elapsed="0.000045"/>
</kw>
<break>
<status status="NOT RUN" start="2025-08-29T15:49:25.291179" elapsed="0.000047"/>
</break>
<status status="NOT RUN" start="2025-08-29T15:49:25.290625" elapsed="0.000652"/>
</branch>
<status status="PASS" start="2025-08-29T15:49:25.290561" elapsed="0.000815"/>
</if>
<var name="${index}">2</var>
<status status="PASS" start="2025-08-29T15:49:25.262337" elapsed="0.029080"/>
</iter>
<iter>
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.292358" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'xpath', 'value': "//div[@class='inventory_item'][3]/div/div/a/div"}</msg>
<msg time="2025-08-29T15:49:25.307110" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.307376" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.23"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.307484" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.307645" level="DEBUG">GET http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.23/text {}</msg>
<msg time="2025-08-29T15:49:25.318905" level="DEBUG">http://localhost:63317 "GET /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.23/text HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.319203" level="DEBUG">Remote response: status=200 | data={"value":"Sauce Labs Bolt T-Shirt"} | headers=HTTPHeaderDict({'Content-Length': '35', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.319328" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.319597" level="INFO">${text} = Sauce Labs Bolt T-Shirt</msg>
<var>${text}</var>
<arg>xpath://div[@class='inventory_item'][${index}]/div/div/a/div</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:25.291820" elapsed="0.028031"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == '${itemName}'">
<kw name="Click Element" owner="SeleniumLibrary">
<arg>xpath://div[@class='inventory_item'][${index}]/div/div[2]/button</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:25.320458" elapsed="0.000091"/>
</kw>
<break>
<status status="NOT RUN" start="2025-08-29T15:49:25.320629" elapsed="0.000040"/>
</break>
<status status="NOT RUN" start="2025-08-29T15:49:25.320061" elapsed="0.000669"/>
</branch>
<status status="PASS" start="2025-08-29T15:49:25.320021" elapsed="0.000756"/>
</if>
<var name="${index}">3</var>
<status status="PASS" start="2025-08-29T15:49:25.291673" elapsed="0.029140"/>
</iter>
<iter>
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.321713" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'xpath', 'value': "//div[@class='inventory_item'][4]/div/div/a/div"}</msg>
<msg time="2025-08-29T15:49:25.336751" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.336962" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.24"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.337064" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.337213" level="DEBUG">GET http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.24/text {}</msg>
<msg time="2025-08-29T15:49:25.348852" level="DEBUG">http://localhost:63317 "GET /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.24/text HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.349065" level="DEBUG">Remote response: status=200 | data={"value":"Sauce Labs Fleece Jacket"} | headers=HTTPHeaderDict({'Content-Length': '36', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.349167" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.349362" level="INFO">${text} = Sauce Labs Fleece Jacket</msg>
<var>${text}</var>
<arg>xpath://div[@class='inventory_item'][${index}]/div/div/a/div</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:25.321189" elapsed="0.028213"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == '${itemName}'">
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:25.351122" level="INFO">Clicking element 'xpath://div[@class='inventory_item'][4]/div/div[2]/button'.</msg>
<msg time="2025-08-29T15:49:25.351429" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'xpath', 'value': "//div[@class='inventory_item'][4]/div/div[2]/button"}</msg>
<msg time="2025-08-29T15:49:25.366798" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.367078" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.27"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.367184" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:25.367352" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.27/click {}</msg>
<msg time="2025-08-29T15:49:25.450473" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.27/click HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:25.450928" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:25.451077" level="DEBUG">Finished Request</msg>
<arg>xpath://div[@class='inventory_item'][${index}]/div/div[2]/button</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:25.350301" elapsed="0.100927"/>
</kw>
<break>
<status status="PASS" start="2025-08-29T15:49:25.451413" elapsed="0.000133"/>
</break>
<status status="PASS" start="2025-08-29T15:49:25.349599" elapsed="0.102024"/>
</branch>
<status status="PASS" start="2025-08-29T15:49:25.349559" elapsed="0.102151"/>
</if>
<var name="${index}">4</var>
<status status="PASS" start="2025-08-29T15:49:25.321046" elapsed="0.130753"/>
</iter>
<var>${index}</var>
<value>1</value>
<value>${len}+1</value>
<status status="PASS" start="2025-08-29T15:49:25.225097" elapsed="0.226891"/>
</for>
<kw name="Log To Console" owner="BuiltIn">
<arg>${index}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-08-29T15:49:25.452486" elapsed="0.000817"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-08-29T15:49:27.454960" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-08-29T15:49:25.453713" elapsed="2.001509"/>
</kw>
<status status="PASS" start="2025-08-29T15:49:25.206793" elapsed="2.248632"/>
</kw>
<kw name="Click on the checkout options and navigate to checkout page" owner="shopPage">
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:27.457182" level="INFO">Clicking element 'id:shopping_cart_container'.</msg>
<msg time="2025-08-29T15:49:27.457529" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="shopping_cart_container"]'}</msg>
<msg time="2025-08-29T15:49:27.467976" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.468236" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.20"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.468344" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:27.468519" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.20/click {}</msg>
<msg time="2025-08-29T15:49:27.570177" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.20/click HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.570543" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.570808" level="DEBUG">Finished Request</msg>
<arg>id:shopping_cart_container</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:27.456800" elapsed="0.114577"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:27.573984" level="INFO">Clicking element 'id:checkout'.</msg>
<msg time="2025-08-29T15:49:27.574741" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="checkout"]'}</msg>
<msg time="2025-08-29T15:49:27.599322" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.599635" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.33"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.599759" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:27.600016" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.33/click {}</msg>
<msg time="2025-08-29T15:49:27.711146" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.33/click HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.711511" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.711750" level="DEBUG">Finished Request</msg>
<arg>id:checkout</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:27.572217" elapsed="0.139733"/>
</kw>
<status status="PASS" start="2025-08-29T15:49:27.456203" elapsed="0.256087"/>
</kw>
<kw name="Fill personal information" owner="Fillinfo">
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:27.715025" level="INFO">Typing text 'Gouthami' into text field 'id:first-name'.</msg>
<msg time="2025-08-29T15:49:27.715416" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="first-name"]'}</msg>
<msg time="2025-08-29T15:49:27.733174" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.733493" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.36"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.733682" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:27.733888" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.36/clear {}</msg>
<msg time="2025-08-29T15:49:27.771296" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.36/clear HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.771510" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.771610" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:27.771783" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.36/value {'text': 'Gouthami', 'value': ['G', 'o', 'u', 't', 'h', 'a', 'm', 'i']}</msg>
<msg time="2025-08-29T15:49:27.885405" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.36/value HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.885645" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.885745" level="DEBUG">Finished Request</msg>
<arg>id:first-name</arg>
<arg>${First_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:27.714549" elapsed="0.171318"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:27.886512" level="INFO">Typing text 'Neeli' into text field 'id:last-name'.</msg>
<msg time="2025-08-29T15:49:27.886679" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="last-name"]'}</msg>
<msg time="2025-08-29T15:49:27.902682" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.902892" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.39"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.902993" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:27.903139" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.39/clear {}</msg>
<msg time="2025-08-29T15:49:27.937500" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.39/clear HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:27.937710" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:27.937827" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:27.937989" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.39/value {'text': 'Neeli', 'value': ['N', 'e', 'e', 'l', 'i']}</msg>
<msg time="2025-08-29T15:49:28.027677" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.39/value HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.027961" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.028080" level="DEBUG">Finished Request</msg>
<arg>id:last-name</arg>
<arg>${Last_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:27.886150" elapsed="0.142079"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:28.029138" level="INFO">Typing text '504109' into text field 'id:postal-code'.</msg>
<msg time="2025-08-29T15:49:28.029548" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="postal-code"]'}</msg>
<msg time="2025-08-29T15:49:28.049074" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.049317" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.40"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.049858" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:28.050127" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.40/clear {}</msg>
<msg time="2025-08-29T15:49:28.087510" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.40/clear HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.087722" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.087821" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:28.087987" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.40/value {'text': '504109', 'value': ['5', '0', '4', '1', '0', '9']}</msg>
<msg time="2025-08-29T15:49:28.183881" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.40/value HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.184124" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.184228" level="DEBUG">Finished Request</msg>
<arg>id:postal-code</arg>
<arg>${pin}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:28.028601" elapsed="0.155756"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:28.185100" level="INFO">Clicking element 'id:continue'.</msg>
<msg time="2025-08-29T15:49:28.185294" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '[id="continue"]'}</msg>
<msg time="2025-08-29T15:49:28.202088" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.202300" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.43"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.202415" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:28.202569" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.43/click {}</msg>
<msg time="2025-08-29T15:49:28.336737" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/element/f.67BD30940625076405BC05499D0F783A.d.B863236BB5ED626F2433E8189EC2E84C.e.43/click HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.337397" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.337678" level="DEBUG">Finished Request</msg>
<arg>id:continue</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-08-29T15:49:28.184725" elapsed="0.153126"/>
</kw>
<status status="PASS" start="2025-08-29T15:49:27.713690" elapsed="0.624402"/>
</kw>
<kw name="verify total price and print it to console" owner="placeorder">
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-08-29T15:49:28.342670" level="DEBUG">POST http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/elements {'using': 'css selector', 'value': '.summary_total_labe'}</msg>
<msg time="2025-08-29T15:49:28.364333" level="DEBUG">http://localhost:63317 "POST /session/e1eb504bdb8ecd4059449adaa7be80ab/elements HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.364709" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.364865" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:28.365427" level="DEBUG">GET http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab/screenshot {}</msg>
<msg time="2025-08-29T15:49:28.551442" level="DEBUG">http://localhost:63317 "GET /session/e1eb504bdb8ecd4059449adaa7be80ab/screenshot HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.551995" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '81300', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.553741" level="DEBUG">Finished Request</msg>
<msg time="2025-08-29T15:49:28.556201" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="../Screenshots/selenium-screenshot-1.png"&gt;&lt;img src="../Screenshots/selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2025-08-29T15:49:28.556569" level="FAIL">Element with locator 'css:.summary_total_labe' not found.</msg>
<msg time="2025-08-29T15:49:28.632488" level="DEBUG">Traceback (most recent call last):
  File "C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\SeleniumLibrary\__init__.py", line 677, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\robotlibcore.py", line 173, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\SeleniumLibrary\keywords\element.py", line 558, in get_text
    return self.find_element(locator).text
           ~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\SeleniumLibrary\base\context.py", line 82, in find_element
    return self.element_finder.find(locator, tag, True, required, parent)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\SeleniumLibrary\locators\elementfinder.py", line 93, in find
    return self._find(locators[-1], tag, first_only, required, element)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\gouth\AppData\Local\Programs\Python\Python313\Lib\site-packages\SeleniumLibrary\locators\elementfinder.py", line 125, in _find
    raise ElementNotFound(f"{element_type} with locator '{locator}' not found.")
SeleniumLibrary.errors.ElementNotFound: Element with locator 'css:.summary_total_labe' not found.</msg>
<var>${total_price_text}</var>
<arg>css:.summary_total_labe</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="FAIL" start="2025-08-29T15:49:28.341148" elapsed="0.291520">Element with locator 'css:.summary_total_labe' not found.</status>
</kw>
<kw name="Split String" owner="String">
<var>@{list_price_details}</var>
<arg>${total_price_text}</arg>
<arg>$</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:28.633114" elapsed="0.000090"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${list_price_details}[1]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-08-29T15:49:28.633396" elapsed="0.000170"/>
</kw>
<status status="FAIL" start="2025-08-29T15:49:28.339126" elapsed="0.294775">Element with locator 'css:.summary_total_labe' not found.</status>
</kw>
<kw name="Place the order and verify order confirmation message" owner="placeorder">
<status status="NOT RUN" start="2025-08-29T15:49:28.634846" elapsed="0.000132"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary" type="TEARDOWN">
<msg time="2025-08-29T15:49:28.636207" level="DEBUG">Closing browser with session id e1eb504bdb8ecd4059449adaa7be80ab.</msg>
<msg time="2025-08-29T15:49:28.636488" level="DEBUG">DELETE http://localhost:63317/session/e1eb504bdb8ecd4059449adaa7be80ab {}</msg>
<msg time="2025-08-29T15:49:28.931719" level="DEBUG">http://localhost:63317 "DELETE /session/e1eb504bdb8ecd4059449adaa7be80ab HTTP/1.1" 200 0</msg>
<msg time="2025-08-29T15:49:28.932207" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-08-29T15:49:28.932428" level="DEBUG">Finished Request</msg>
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-08-29T15:49:28.635880" elapsed="2.479202"/>
</kw>
<status status="FAIL" start="2025-08-29T15:49:15.824432" elapsed="15.291371">Element with locator 'css:.summary_total_labe' not found.</status>
</test>
<doc>Creating a script that automates test for login page</doc>
<status status="FAIL" start="2025-08-29T15:49:15.261552" elapsed="15.855947"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Login" id="s1" pass="0" fail="1" skip="0">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
